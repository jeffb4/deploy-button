AWSTemplateFormatVersion: "2010-09-09"

Description: >
  Builds a CodePipeline to deploy the manual gate deployment button, but also uses the manual 
  gate deployment button to deploy it.

Parameters:
  GitHubToken:
    Type: String
    NoEcho: true
  NotificationFunction:
    Type: String

Resources:
  ArtifactStoreBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      VersioningConfiguration:
        Status: Suspended
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'ArtifactStoreBucket'
        Type: S3
      DisableInboundStageTransitions: []
      Name: "SamplePipelinewithManualStep"
      RoleArn: !GetAtt 'PipelineRole.Arn'
      Stages:
      - Name: Source
        Actions:
        - InputArtifacts: []
          Name: Source
          ActionTypeId:
            Category: Source
            Owner: ThirdParty
            Provider: GitHub
            Version: 1
          OutputArtifacts:
          - Name: DeployButton
          Configuration:
            Owner: stelligent
            Repo: deploy-button
            PollForSourceChanges: 'false'
            Branch: master
            OAuthToken: !Ref GitHubToken
          RunOrder: 1
      - Name: Gate
        Actions:
        - Name: Notify
          ActionTypeId:
            Category: Invoke
            Owner: AWS
            Version: '1'
            Provider: Lambda
          Configuration:
            FunctionName: !Ref NotificationFunction
          RunOrder: 1
        - InputArtifacts: []
          Name: ManualApproval
          ActionTypeId:
            Category: Approval
            Owner: AWS
            Provider: Manual
            Version: 1
          OutputArtifacts: []
          Configuration: {}
          RunOrder: 2
      - Name: Deploy
        Actions:
        - InputArtifacts:
          - Name: DeployButton
          Name: deploy-dummy-stack
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Provider: CloudFormation
            Version: 1
          OutputArtifacts: []
          Configuration:
            StackName: dummy-deployment-stack
            ActionMode: CREATE_UPDATE
            RoleArn: !GetAtt 'CFNRole.Arn'
            TemplatePath: DeployButton::provisioning/dummy.yml
          RunOrder: 1

  CFNRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [cloudformation.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CloudFormationRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'ssm:*'
                Effect: Allow
                Resource: '*'
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: ['sts:AssumeRole']
          Effect: Allow
          Principal:
            Service: [codepipeline.amazonaws.com]
        Version: '2012-10-17'
      Path: /
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                - 's3:*'
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'iam:PassRole'
                - 'sns:Publish'
                - 'lambda:*'
                - '*'
                Effect: Allow
                Resource: '*'
