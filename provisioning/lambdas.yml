AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation to set up lambda functions to be used for a deploy button for code pipeline.
Resources:
  ReceiveButtonPress:
    Type: AWS::Lambda::Function
    Properties:
      Code: 'lambda/receive_button_press.py'
      Handler: 'receive_button_press.handler'
      Role: !GetAtt 'RecieveButtonPressExecutionRole.Arn'
      Runtime: 'python2.7'
      Timeout: '30'
  RecieveButtonPressExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - ec2:DescribeImages
                Resource: '*'
  SendNotification:
    Type: AWS::Lambda::Function
    Properties:
      Code: 'lambda/send_notification.py'
      Handler: 'send_notification.handler'
      Role: !GetAtt 'SendNotificationExecutionRole.Arn'
      Runtime: 'python2.7'
      Timeout: '30'
  SendNotificationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - ec2:DescribeImages
                Resource: '*'
              - Effect: Allow
                Action:
                  - codepipeline:PutJobSuccessResult
                  - codepipeline:PutJobFailureResult
                Resource: '*'


Outputs:
  ButtonListenerLambdaArn:
    Description: The Lambda Function that the button press will trigger
    Value: !GetAtt 'ReceiveButtonPress.Arn'
  SendNotificationLambdaName:
    Description: The Lambda Function that the button press will trigger
    Value: !Ref 'SendNotification'
